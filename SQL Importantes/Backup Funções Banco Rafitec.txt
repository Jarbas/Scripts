DROP FUNCTION RAFITEC.BUSCA_COD_TEARES_PRODUTO;

CREATE OR REPLACE FUNCTION RAFITEC.BUSCA_COD_TEARES_PRODUTO(TEC IN NUMBER)
   RETURN VARCHAR2 IS TEARES VARCHAR2(2000);
BEGIN
DECLARE 
TEARES  VARCHAR2(2000);
CURSOR TB IS SELECT MP.COD_MAQUINA FROM MAQUINAS_PRODUTO MP  WHERE (MP.COD_PRODUTO= TEC) ORDER BY MP.COD_MAQUINA DESC;
R_TB TB%ROWTYPE;

BEGIN 
 OPEN TB;
 LOOP
    FETCH TB INTO R_TB;
    EXIT WHEN TB%NOTFOUND;
    IF NOT TB%NOTFOUND THEN
     TEARES := (TO_CHAR(R_TB.COD_MAQUINA))||','||TEARES;
    END IF;
END LOOP;
CLOSE TB;

RETURN TEARES;

END;
END BUSCA_COD_TEARES_PRODUTO;
/

DROP FUNCTION RAFITEC.BUSCA_CONHECIMENTOS_NOTAS;

CREATE OR REPLACE FUNCTION RAFITEC.BUSCA_CONHECIMENTOS_NOTAS (COD_NF IN NUMBER,COD_EMP NUMBER)
   RETURN VARCHAR2 IS NUMERO_NF VARCHAR2(2000);
BEGIN
DECLARE 
TEARES  VARCHAR2(2000);
CURSOR TB IS SELECT CF.NUMERO_NOTA FROM CONHECIMENTO_FRETE  CF 
             LEFT JOIN CONHECIMENTO_FRETE_NOTAS_SAI CFS ON CFS.COD_CONHECIMENTO=CF.COD_CONHECIMENTO AND CFS.COD_EMPRESA=CF.COD_EMPRESA 
             WHERE CFS.COD_SAIDA=COD_NF AND CFS.COD_EMPRESA=COD_EMP;
R_TB TB%ROWTYPE;

BEGIN 
 TEARES := ' ';
 OPEN TB;
 LOOP
    FETCH TB INTO R_TB;
    EXIT WHEN TB%NOTFOUND; 
    NUMERO_NF := (TO_CHAR(R_TB.NUMERO_NOTA))||','||NUMERO_NF;
END LOOP;
CLOSE TB;

RETURN NUMERO_NF;

END;
END BUSCA_CONHECIMENTOS_NOTAS;
/

DROP FUNCTION RAFITEC.BUSCA_FLUTUANTE_FT;

CREATE OR REPLACE FUNCTION RAFITEC.BUSCA_FLUTUANTE_FT (TABELA IN VARCHAR2, BUSCA IN VARCHAR2, CHAVE IN VARCHAR2, VALOR IN NUMBER, NEGOCIO IN NUMBER)
   RETURN NUMBER IS RESULT NUMBER(11,2);
BEGIN
  DECLARE
    RESULT      NUMBER (11,2);
    V_SQL       VARCHAR2(256);
BEGIN
  
      V_SQL := 'SELECT '|| BUSCA || ' FROM ' || TABELA ||' WHERE ' || CHAVE || ' = ' || VALOR || ' AND REVISAO = '|| BUSCA_MAX_REVISAO_PROD(VALOR,NEGOCIO);
      
      EXECUTE IMMEDIATE V_SQL INTO RESULT;
        
  
  RETURN RESULT;  
END; 
END BUSCA_FLUTUANTE_FT;
/

DROP FUNCTION RAFITEC.BUSCA_GRAMATURA_TEC;

CREATE OR REPLACE FUNCTION RAFITEC.BUSCA_GRAMATURA_TEC (PRODUTO IN NUMBER)
   RETURN NUMBER IS GRAMATURA NUMBER(11,2);
BEGIN
  DECLARE
    GRAMATURA      NUMBER (11,2);
BEGIN

  SELECT PIT.GRAMATURA INTO GRAMATURA FROM PRODUTOS_INTERMEDIARIOS_TEC PIT WHERE PIT.COD_PRODUTO = PRODUTO 
  AND PIT.REVISAO_TEC = (SELECT MAX(PITT.REVISAO_TEC) FROM PRODUTOS_INTERMEDIARIOS_TEC PITT WHERE PITT.COD_PRODUTO = PRODUTO);
  
  RETURN GRAMATURA;  
END; 
END BUSCA_GRAMATURA_TEC;
/

DROP FUNCTION RAFITEC.BUSCA_MAX_REVISAO_PROD;

CREATE OR REPLACE FUNCTION RAFITEC.BUSCA_MAX_REVISAO_PROD (PRODUTO IN NUMBER, UND_NEG NUMBER)
   RETURN NUMBER IS REVISAO NUMBER(11,2);
BEGIN
  DECLARE
    REVISAO      NUMBER (11,2);
BEGIN
  IF UND_NEG = 2 THEN
      SELECT MAX(FPB.REVISAO) INTO REVISAO FROM FICHA_PRODUTO_BIG_BAG FPB WHERE FPB.COD_PRODUTO = PRODUTO;
  ELSIF UND_NEG = 0 THEN
      SELECT MAX(PIT.REVISAO_TEC) INTO REVISAO FROM PRODUTOS_INTERMEDIARIOS_TEC PIT WHERE PIT.COD_PRODUTO = PRODUTO;
  ELSE
      SELECT MAX(FPS.REVISAO) INTO REVISAO FROM FICHA_PRODUTO_SACARIA FPS WHERE FPS.COD_PRODUTO = PRODUTO; 
  END IF;      
  
  RETURN REVISAO;  
END; 
END BUSCA_MAX_REVISAO_PROD;
/

DROP FUNCTION RAFITEC.BUSCA_NUM_TEARES_PRODUTO;

CREATE OR REPLACE FUNCTION RAFITEC.BUSCA_NUM_TEARES_PRODUTO(TEC IN NUMBER)
   RETURN NUMBER IS RESULT NUMBER(15);
BEGIN
DECLARE
RESULT NUMBER(15); 

BEGIN 
 SELECT COUNT(MP.COD_MAQUINA) INTO RESULT FROM MAQUINAS_PRODUTO MP  WHERE (MP.COD_PRODUTO= TEC);
  
 RETURN RESULT;

END;
END BUSCA_NUM_TEARES_PRODUTO;
/

DROP FUNCTION RAFITEC.BUSCA_TEARES_PRODUTO;

CREATE OR REPLACE FUNCTION RAFITEC.BUSCA_TEARES_PRODUTO (TEC IN NUMBER)
   RETURN VARCHAR2 IS TEARES VARCHAR2(2000);
BEGIN
DECLARE 
TEARES  VARCHAR2(2000);
CURSOR TB IS SELECT (MA.APELIDO) AS APELIDO FROM MAQUINAS_PRODUTO MP INNER JOIN MAQUINAS MA ON MA.COD_MAQUINA=MP.COD_MAQUINA WHERE (MP.COD_PRODUTO= TEC) ORDER BY MA.APELIDO DESC;
R_TB TB%ROWTYPE;

BEGIN 
 TEARES := ' ';
 OPEN TB;
 LOOP
    FETCH TB INTO R_TB;
    EXIT WHEN TB%NOTFOUND; 
    TEARES := (TO_CHAR(R_TB.APELIDO))||','||TEARES;
END LOOP;
CLOSE TB;

RETURN TEARES;

END;
END BUSCA_TEARES_PRODUTO;
/

DROP FUNCTION RAFITEC.CALCULA_PERIODIC_ALMOX;

CREATE OR REPLACE FUNCTION RAFITEC.CALCULA_PERIODIC_ALMOX (EMPRESA IN NUMBER, PRODUTO IN NUMBER)
   RETURN NUMBER IS QTDE_DIAS_ESTOQUE NUMBER;
BEGIN
  DECLARE 
     DATA_SAIDA   TIMESTAMP(6);   
     DATA_ENTRADA TIMESTAMP(6);
     ULTIMA_MOVIMENTACAO VARCHAR(1);
BEGIN
      
 SELECT MAX(PV.DATA_MOVIMENTO) INTO DATA_SAIDA   FROM PRODUTOS_MOVIMENTO PV WHERE (PV.COD_EMPRESA =EMPRESA) AND (PV.COD_PRODUTO =PRODUTO) AND (PV.TIPO_MOVIMENTO = 'S') AND (PV.SITUACAO = 'A');
 SELECT MAX(PV.DATA_MOVIMENTO) INTO DATA_ENTRADA FROM PRODUTOS_MOVIMENTO PV WHERE (PV.COD_EMPRESA =EMPRESA) AND (PV.COD_PRODUTO =PRODUTO) AND (PV.TIPO_MOVIMENTO = 'E') AND (PV.SITUACAO = 'A');
 SELECT RETORNA_ULTIMO_TIPO_MOV (EMPRESA,PRODUTO) INTO ULTIMA_MOVIMENTACAO FROM DUAL;
     
  CASE 
     WHEN (ULTIMA_MOVIMENTACAO = 'S') THEN 
       SELECT (TRUNC(SYSDATE) - (TRUNC(DATA_SAIDA  )) )   INTO QTDE_DIAS_ESTOQUE FROM DUAL;  
     WHEN (ULTIMA_MOVIMENTACAO = 'E')     THEN 
       SELECT (TRUNC(SYSDATE) - (TRUNC(DATA_ENTRADA)) ) INTO QTDE_DIAS_ESTOQUE FROM DUAL;
  END CASE;  

  RETURN QTDE_DIAS_ESTOQUE;
END; 
END CALCULA_PERIODIC_ALMOX;
/

DROP FUNCTION RAFITEC.DIAS_UTEIS;

CREATE OR REPLACE FUNCTION RAFITEC.DIAS_UTEIS(S DATE)
   RETURN NUMBER IS RESULT NUMBER(15);
BEGIN
DECLARE
RESULT NUMBER(15); 

BEGIN 
 SELECT COUNT(DIA_SEMANA) INTO RESULT
  FROM (
          /* RETORNA TODOS OS DIAS DE UM MÊS COM O NÚMERO INFORMANDO O TIPO DE DIA */
          SELECT DATAS_MES + LEVEL - 1 DATA_, TO_CHAR(DATAS_MES + LEVEL - 1, 'd') DIA_SEMANA
          FROM (
                   /* RETORNA PRIMEIRA DATA DO MÊS */
                   SELECT TRUNC(
                                   TO_DATE( TO_CHAR(S,'MM') || '/' || TO_CHAR(S,'YYYY'), 'MM/YYYY'), 'MM' /* TROCAR O 02 PELO MÊS DESEJADO E 2014 PELO ANO DESEJADO */
                               ) DATAS_MES FROM DUAL
               )
        CONNECT BY DATAS_MES + LEVEL - 1 <= LAST_DAY(DATAS_MES)
        )
 WHERE DIA_SEMANA NOT IN (1) AND DATA_ >= S; 
 RETURN RESULT;

END;
END DIAS_UTEIS;
/

DROP FUNCTION RAFITEC.EFICIENCIA_MEDIA;

CREATE OR REPLACE FUNCTION RAFITEC.EFICIENCIA_MEDIA(PROD IN NUMBER, MES IN NUMBER)
   RETURN NUMBER IS RESULT NUMBER(15,2);
BEGIN
DECLARE
RESULT NUMBER(15,2); 

BEGIN 
 SELECT AVG(APT.EFICIENCIA) INTO RESULT FROM V_APONTAMENTO_PRODUCAO_TEC APT WHERE APT.COD_MAQUINA IN ((SELECT MP.COD_MAQUINA FROM MAQUINAS_PRODUTO MP  WHERE (MP.COD_PRODUTO= PROD))) --AND TO_CHAR(APT.DATA,'mm')=MES;
 AND TRUNC(APT.DATA) = (SELECT MAX(TRUNC(APTT.DATA)) FROM V_APONTAMENTO_PRODUCAO_TEC APTT  WHERE (APTT.COD_PRODUTO = PROD));
  
 RETURN RESULT;

END;
END EFICIENCIA_MEDIA;
/

DROP FUNCTION RAFITEC.EXISTE_REGISTRO_MOV_PA;

CREATE OR REPLACE FUNCTION RAFITEC.EXISTE_REGISTRO_MOV_PA(VALOR IN NUMBER ) RETURN BOOLEAN IS
EXISTE BOOLEAN;
BEGIN

DECLARE
CONTAGEM NUMBER(11) ;

BEGIN
   EXISTE := FALSE;
   
   SELECT COUNT(*) INTO CONTAGEM FROM PRODUTOS_MOVIMENTO_ACABADO 
   
   WHERE COD_ETIQUETA = VALOR;
   
   IF CONTAGEM > 0 THEN
   RETURN TRUE;
   ELSE
   RETURN FALSE;
   END IF; 
     
   
   
   EXCEPTION
     WHEN NO_DATA_FOUND THEN
       NULL;
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END;       
END EXISTE_REGISTRO_MOV_PA;
/

DROP FUNCTION RAFITEC.PRODUCAO_MEDIA_DIA;

CREATE OR REPLACE FUNCTION RAFITEC.PRODUCAO_MEDIA_DIA(PROD IN NUMBER, DIA IN NUMBER)
   RETURN NUMBER IS RESULT NUMBER(15,2);
BEGIN
DECLARE
RESULT NUMBER(15,2);
TEARES NUMBER(15); 

BEGIN 
 SELECT (AVG(APT.QUANTIDADE_PRODUZIDA_ML)*3) INTO RESULT FROM V_APONTAMENTO_PRODUCAO_TEC APT 
 WHERE APT.COD_MAQUINA IN ((SELECT MP.COD_MAQUINA FROM MAQUINAS_PRODUTO MP  WHERE (MP.COD_PRODUTO= PROD))) 
 AND TRUNC(APT.DATA) = (SELECT MAX(TRUNC(APTT.DATA)) FROM V_APONTAMENTO_PRODUCAO_TEC APTT  WHERE (APTT.COD_PRODUTO = PROD));
   
 RETURN RESULT;

END;
END PRODUCAO_MEDIA_DIA;
/

DROP FUNCTION RAFITEC.QTDE_FASES_N_FINALIZADAS;

CREATE OR REPLACE FUNCTION RAFITEC.QTDE_FASES_N_FINALIZADAS (EMPRESA IN NUMBER, PROJETO IN NUMBER)
 RETURN NUMBER IS QTDE NUMBER;   
BEGIN  
 SELECT COUNT(PF.COD_FASE) INTO QTDE FROM PROJETOS_FASES PF WHERE (PF.COD_EMPRESA =EMPRESA) AND (PF.COD_PROJETO =PROJETO) AND (PF.STATUS_FASE NOT IN (6));
 RETURN QTDE; 
END QTDE_FASES_N_FINALIZADAS;
/

DROP FUNCTION RAFITEC.RETORNA_BAIXAS_ADTO_DATA;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_BAIXAS_ADTO_DATA (EMPRESA IN NUMBER, ENTIDADE IN NUMBER, TIPO IN VARCHAR, DATAINI IN DATE)
 RETURN NUMBER IS TOTAL NUMBER (11,2);   
BEGIN
  DECLARE 
   V_BAIXAS_ADTOS NUMBER(11,2);   
BEGIN
 
   SELECT NVL(SUM(AB.VALOR),0) INTO V_BAIXAS_ADTOS  FROM ADIANTAMENTOS_BAIXAS AB WHERE (AB.COD_EMPRESA = EMPRESA) AND (AB.COD_ENTIDADE = ENTIDADE) AND (AB.TIPO_ENTIDADE = TIPO) AND (TRUNC(AB.DATA_BAIXA) < TO_DATE(DATAINI)) AND (AB.DATA_CANCELAMENTO IS NULL);
   TOTAL := (V_BAIXAS_ADTOS);
   RETURN TOTAL;
END; 
END RETORNA_BAIXAS_ADTO_DATA;
/

DROP FUNCTION RAFITEC.RETORNA_BAIXAS_ADTO_ENTREDATA;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_BAIXAS_ADTO_ENTREDATA (EMPRESA IN NUMBER, ENTIDADE IN NUMBER, TIPO IN VARCHAR, DATAINI IN DATE, DATAFIM IN DATE)
 RETURN NUMBER IS TOTAL NUMBER (11,2);   
BEGIN
  DECLARE 
   V_BAIXAS_ADTOS NUMBER(11,2);   
BEGIN
 
   SELECT NVL(SUM(AB.VALOR),0) INTO V_BAIXAS_ADTOS  FROM ADIANTAMENTOS_BAIXAS AB WHERE (AB.COD_EMPRESA = EMPRESA) AND (AB.COD_ENTIDADE = ENTIDADE) AND (AB.TIPO_ENTIDADE = TIPO) AND (TRUNC(AB.DATA_BAIXA) BETWEEN TO_DATE(DATAINI) AND TO_DATE(DATAFIM)) AND (AB.DATA_CANCELAMENTO IS NULL);
   TOTAL := (V_BAIXAS_ADTOS);
   RETURN TOTAL;
END; 
END RETORNA_BAIXAS_ADTO_ENTREDATA;
/

DROP FUNCTION RAFITEC.RETORNA_COMPRIMENTO_COMPONENTE;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_COMPRIMENTO_COMPONENTE(PRODUTO IN NUMBER , COMPONENTE IN NUMBER  ) RETURN NUMBER IS
COMPRIMENTO NUMBER(15,3);

BEGIN

   
   SELECT   EB.COMPRIMENTO/100 INTO COMPRIMENTO
  FROM ESPECIFICACOES_BAG EB
  INNER JOIN COMPONENTES_BAG CB ON EB.COD_COMPONENTE = CB.COD_COMPONENTE
  INNER JOIN PRODUTOS PR ON EB.COD_MATERIAL = PR.COD_PRODUTO
  WHERE EB.COD_PRODUTO = PRODUTO AND EB.COD_COMPONENTE = COMPONENTE
  AND CB.IMPRESSAO_OP_COMP = 'S';
  
  RETURN COMPRIMENTO;
  
       
END RETORNA_COMPRIMENTO_COMPONENTE;
/

DROP FUNCTION RAFITEC.RETORNA_CONS_MED_MENS_ITEM;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_CONS_MED_MENS_ITEM (EMPRESA IN NUMBER, PRODUTO IN NUMBER)
 RETURN NUMBER IS CONSUMO NUMBER (11,2);   
BEGIN  
   SELECT NVL((SUM(PM.QUANTIDADE)/4),0) INTO CONSUMO FROM PRODUTOS_MOVIMENTO PM WHERE (PM.COD_EMPRESA = EMPRESA) AND (PM.COD_PRODUTO = PRODUTO) AND (PM.TIPO_MOVIMENTO = 'S') AND (PM.SITUACAO = 'A') AND (TRUNC(PM.DATA_MOVIMENTO) BETWEEN TO_DATE(SYSDATE-120) AND TO_DATE(SYSDATE));
   RETURN CONSUMO;
 
END RETORNA_CONS_MED_MENS_ITEM;
/

DROP FUNCTION RAFITEC.RETORNA_CONSUMO_ITEM_PERIODO;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_CONSUMO_ITEM_PERIODO (EMPRESA IN NUMBER, PRODUTO IN NUMBER, PERIODICIDADE IN NUMBER)
 RETURN NUMBER IS CONSUMO NUMBER (11,2);   

BEGIN
  
SELECT NVL ((SUM (PM.QUANTIDADE)), 0) INTO CONSUMO
  FROM PRODUTOS_MOVIMENTO PM
  WHERE  (PM.COD_EMPRESA = EMPRESA)  AND (PM.COD_PRODUTO = PRODUTO)
       AND (PM.TIPO_MOVIMENTO = 'S') AND (PM.SITUACAO = 'A')
       AND (TRUNC (PM.DATA_MOVIMENTO) BETWEEN TO_DATE (SYSDATE - PERIODICIDADE) AND TO_DATE (SYSDATE));   
  RETURN CONSUMO; 
  
END RETORNA_CONSUMO_ITEM_PERIODO;
/

DROP FUNCTION RAFITEC.RETORNA_DATA_ULT_CAIXAFECHADO;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_DATA_ULT_CAIXAFECHADO (EMPRESA IN NUMBER, CONTA IN NUMBER)
   RETURN TIMESTAMP
IS
   ULTIMA_DATA_FECHAMENTO   TIMESTAMP (6);
BEGIN
   SELECT MAX (TRUNC (TSCB.DATA_SALDO_FINAL)) INTO ULTIMA_DATA_FECHAMENTO     
     FROM TITULOS_SALDO_CAIXA_BANCO TSCB
     WHERE (TSCB.COD_EMPRESA = EMPRESA) AND (TSCB.CONTA_CONTABIL = CONTA) AND (TSCB.STATUS_CAIXA = 6);   
          
     RETURN ULTIMA_DATA_FECHAMENTO;

END RETORNA_DATA_ULT_CAIXAFECHADO;
/

DROP FUNCTION RAFITEC.RETORNA_ESTOQUE_VIRTUAL_ITEM;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_ESTOQUE_VIRTUAL_ITEM (EMPRESA IN NUMBER, PRODUTO IN NUMBER)
 RETURN NUMBER IS ESTOQUE_VIRTUAL NUMBER (11,2);   
BEGIN  
   SELECT (SUM(NVL (PCI.QUANTIDADE,0)) - SUM(NVL(PCI.QUANTIDADE_ENTREGUE,0))) INTO ESTOQUE_VIRTUAL
                   FROM PEDIDOS_COMPRAS_ITENS PCI
                   LEFT JOIN PEDIDOS_COMPRAS PC ON  PCI.COD_EMPRESA = PC.COD_EMPRESA AND PCI.COD_PEDIDO_COMPRA = PC.COD_PEDIDO_COMPRA
                   WHERE (PC.SITUACAO = 'A' OR PC.SITUACAO = 'P') AND (PCI.COD_EMPRESA = EMPRESA)  AND (PCI.COD_PRODUTO = PRODUTO);   
   RETURN ESTOQUE_VIRTUAL; 
END RETORNA_ESTOQUE_VIRTUAL_ITEM;
/

DROP FUNCTION RAFITEC.RETORNA_MAX_VALOR_SIMPLES;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_MAX_VALOR_SIMPLES (TABELA IN VARCHAR2, BUSCA IN VARCHAR2, CHAVE IN VARCHAR2, VALOR IN NUMBER)
   RETURN NUMBER IS MAIOR NUMBER(11,2);
BEGIN
   SELECT MAX (BUSCA)
     INTO MAIOR
     FROM TABELA 
    WHERE CHAVE = VALOR;   
          
     RETURN MAIOR;

END RETORNA_MAX_VALOR_SIMPLES;
/

DROP FUNCTION RAFITEC.RETORNA_MAX_VENDA_CARTEIRA;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_MAX_VENDA_CARTEIRA (VALOR IN NUMBER)
   RETURN NUMBER IS MAIOR NUMBER(11,2);
BEGIN
   SELECT MAX (CP.DISP_VENDA)
     INTO MAIOR
     FROM CARTEIRA_PEDIDOS CP 
    WHERE CP.TECIDO_TECELAGEM = VALOR;   
          
     RETURN MAIOR;

END RETORNA_MAX_VENDA_CARTEIRA;
/

DROP FUNCTION RAFITEC.RETORNA_NRO_NF_ADTO;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_NRO_NF_ADTO (EMPRESA IN NUMBER, CODIGO IN NUMBER, TIPO IN VARCHAR)
   RETURN NUMBER IS NRO_NF NUMBER(11);
BEGIN
    
  CASE 
     WHEN (TIPO = 'C') THEN 
       SELECT LFS.NUMERO_NF INTO NRO_NF FROM LCTO_FISCAL_SAI LFS WHERE (LFS.COD_EMPRESA = EMPRESA) AND (LFS.COD_SAIDA = CODIGO);
     WHEN (TIPO = 'F') THEN
       SELECT LFE.NUMERO_NF INTO NRO_NF FROM LCTO_FISCAL_ENT LFE WHERE (LFE.COD_EMPRESA = EMPRESA) AND (LFE.COD_ENTRADA = CODIGO);
  END CASE;

  RETURN NRO_NF;

END RETORNA_NRO_NF_ADTO;
/

DROP FUNCTION RAFITEC.RETORNA_POSICAO_ESTOQUE_ITEM;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_POSICAO_ESTOQUE_ITEM (EMPRESA IN NUMBER, PRODUTO IN NUMBER, DATA IN TIMESTAMP)
 RETURN NUMBER IS SALDO NUMBER (11,2);   
BEGIN
  DECLARE 
   ENTRADAS NUMBER(11,2);
   SAIDAS   NUMBER(11,2);
BEGIN
  
   SELECT NVL(SUM(PR.QUANTIDADE),0) INTO ENTRADAS  FROM PRODUTOS_MOVIMENTO PR  WHERE (PR.COD_EMPRESA = EMPRESA)  AND (PR.COD_PRODUTO = PRODUTO)  AND (PR.TIPO_MOVIMENTO = 'E') AND (PR.SITUACAO = 'A') AND (TRUNC(PR.DATA_MOVIMENTO) <= DATA) ;
   SELECT NVL(SUM(PR.QUANTIDADE),0) INTO SAIDAS  FROM PRODUTOS_MOVIMENTO PR  WHERE  (PR.COD_EMPRESA = EMPRESA)  AND (PR.COD_PRODUTO = PRODUTO)  AND (PR.TIPO_MOVIMENTO = 'S') AND (PR.SITUACAO = 'A') AND (TRUNC(PR.DATA_MOVIMENTO) <= DATA) ;
   SALDO := (ENTRADAS - SAIDAS);

   RETURN SALDO;
END; 
END RETORNA_POSICAO_ESTOQUE_ITEM;
/

DROP FUNCTION RAFITEC.RETORNA_PROD_MAQ_TURNO_ACAB;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_PROD_MAQ_TURNO_ACAB (MAQUINA IN NUMBER, TURNO_TRAB IN NUMBER, DATAINICIO IN DATE, DATAFIM IN DATE)
 RETURN NUMBER IS PRODUCAO NUMBER (11);   
BEGIN  
 SELECT 
   (CASE 
      WHEN NVL(SUM(APD.QUANTIDADE_PRODUZIDA_PC),0) = 0  THEN 1   
      WHEN NVL(SUM(APD.QUANTIDADE_PRODUZIDA_PC),0) <> 0 THEN NVL(SUM(APD.QUANTIDADE_PRODUZIDA_PC),0)
   END) INTO PRODUCAO    
 FROM APONTAMENTO_PRODUCAO APD 
 JOIN MAQUINAS MAD1 ON (MAD1.COD_MAQUINA = APD.COD_MAQUINA) AND (MAD1.RELATORIOS_APONTAMENTO = 'S')
 WHERE (APD.COD_MAQUINA = MAQUINA) AND (APD.TURNO = TURNO_TRAB)  AND (TRUNC(APD.DATA) BETWEEN TO_DATE(DATAINICIO) AND TO_DATE(DATAFIM));  
 
 RETURN PRODUCAO; 
END RETORNA_PROD_MAQ_TURNO_ACAB;
/

DROP FUNCTION RAFITEC.RETORNA_PROD_MAQ_TURNO_ACAB_2;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_PROD_MAQ_TURNO_ACAB_2 (MAQUINA IN NUMBER, TURNOVER IN NUMBER, DATAINICIO IN DATE, DATAFIM IN DATE )
 RETURN NUMBER IS PRODUCAO NUMBER (11,4);   
BEGIN  

 PRODUCAO := 0; 
 SELECT 

      NVL(SUM(APD.QUANTIDADE_PRODUZIDA_PC),0) INTO PRODUCAO    

 FROM APONTAMENTO_PRODUCAO APD 
 JOIN MAQUINAS MAD1 ON (MAD1.COD_MAQUINA = APD.COD_MAQUINA) AND (MAD1.RELATORIOS_APONTAMENTO = 'S')
 WHERE (APD.COD_MAQUINA = MAQUINA) AND (APD.TURNO = TURNOVER)  AND (TRUNC(APD.DATA) BETWEEN TO_DATE(DATAINICIO) AND TO_DATE(DATAFIM) );

 RETURN PRODUCAO; 
END RETORNA_PROD_MAQ_TURNO_ACAB_2;
/

DROP FUNCTION RAFITEC.RETORNA_QTDE_OS_STATUS;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_QTDE_OS_STATUS (STATUS IN NUMBER, USUARIO IN NUMBER)
 RETURN NUMBER IS QTDE NUMBER;   
BEGIN  
 SELECT COUNT(O.COD_OS) INTO QTDE FROM OS O WHERE (O.COD_STATUS =STATUS) AND (O.COD_SOLICITANTE =USUARIO);
 RETURN QTDE; 
END RETORNA_QTDE_OS_STATUS;
/

DROP FUNCTION RAFITEC.RETORNA_QTDE_OS_VALIDADA;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_QTDE_OS_VALIDADA (EMPRESA IN NUMBER, SETOR IN NUMBER, DATAINICIO IN DATE, DATAFIM IN DATE)
 RETURN NUMBER IS QTDE NUMBER;   
BEGIN  
 
 SELECT 
      (CASE 
          WHEN NVL(COUNT(OV.COD_OS),0) = 0  THEN 1 
          WHEN NVL(COUNT(OV.COD_OS),0) <> 0 THEN NVL(COUNT(OV.COD_OS),0)     
      END) INTO QTDE 
 FROM OS_VALIDACAO OV 
 LEFT JOIN OS O ON (OV.COD_EMPRESA = O.COD_EMPRESA) AND (OV.COD_OS = O.COD_OS)
 WHERE (OV.COD_EMPRESA = EMPRESA) AND (O.COD_SETOR = SETOR) AND (TRUNC(OV.DATA_VALIDACAO) BETWEEN TO_DATE(DATAINICIO) AND TO_DATE(DATAFIM));
 
 RETURN QTDE; 
END RETORNA_QTDE_OS_VALIDADA;
/

DROP FUNCTION RAFITEC.RETORNA_QTD_PADRAO_SACOS_FICHA;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_QTD_PADRAO_SACOS_FICHA(PRODUTO IN NUMBER, UND_NEG NUMBER)
   RETURN NUMBER IS QTDE_SACOS NUMBER(11);
BEGIN
  DECLARE
    QTDE_SACOS      NUMBER (11);
BEGIN
  IF UND_NEG = 1 THEN
      SELECT FPS.QUANTIDADE_SACO INTO QTDE_SACOS FROM FICHA_PRODUTO_SACARIA FPS WHERE (FPS.COD_PRODUTO = PRODUTO) AND (FPS.REVISAO = BUSCA_MAX_REVISAO_PROD (PRODUTO,UND_NEG));            
  ELSIF UND_NEG = 2 THEN
      SELECT FPBB.QUANTIDADE_SACO INTO QTDE_SACOS FROM FICHA_PRODUTO_BIG_BAG FPBB WHERE (FPBB.COD_PRODUTO = PRODUTO) AND (FPBB.REVISAO = BUSCA_MAX_REVISAO_PROD (PRODUTO,UND_NEG));
  END IF;      
  
  RETURN QTDE_SACOS;  
END; 
END RETORNA_QTD_PADRAO_SACOS_FICHA;
/

DROP FUNCTION RAFITEC.RETORNA_SACSEG_MAQ_TURNO_ACAB;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_SACSEG_MAQ_TURNO_ACAB (MAQUINA IN NUMBER, TURNO_TRAB IN NUMBER, SETOR IN NUMBER, DATAINICIO IN DATE, DATAFIM IN DATE)
 RETURN NUMBER IS SACARIA_SEG NUMBER (11);   
BEGIN

  SELECT 
    NVL(SUM(ASSI2.QUANTIDADE),0) INTO SACARIA_SEG
  FROM APONTAMENTO_SACARIA_SEG_ITENS ASSI2
  LEFT JOIN APONTAMENTO_SACARIA_SEG ASS2 ON ASSI2.COD_LANCAMENTO = ASS2.COD_LANCAMENTO
  WHERE (ASSI2.COD_MAQUINA = MAQUINA) AND (ASS2.COD_TURNO = TURNO_TRAB) AND (TRUNC(ASS2.DATA) BETWEEN TO_DATE(DATAINICIO) AND TO_DATE(DATAFIM)) AND (ASSI2.COD_SETOR = SETOR);
  
 RETURN SACARIA_SEG; 
END RETORNA_SACSEG_MAQ_TURNO_ACAB;
/

DROP FUNCTION RAFITEC.RETORNA_SALDO_ADIANTAMENTOS;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_SALDO_ADIANTAMENTOS (EMPRESA IN NUMBER, ENTIDADE IN NUMBER, TIPO IN VARCHAR)
 RETURN NUMBER IS SALDO NUMBER (11,2);   
BEGIN
  DECLARE 
   V_ADIANTAMENTOS NUMBER(11,2);
   V_BAIXAS_ADTOS  NUMBER(11,2);
   V_DEVOLUCOES    NUMBER(11,2);
BEGIN
  
   SELECT RETORNA_TOTAL_ADIANTAMENTOS(EMPRESA,ENTIDADE,TIPO) INTO V_ADIANTAMENTOS FROM DUAL;
   SELECT RETORNA_TOTAL_BAIXA_ADTOS  (EMPRESA,ENTIDADE,TIPO) INTO V_BAIXAS_ADTOS FROM DUAL;
   SELECT RETORNA_SALDO_DEVOLUCOES   (EMPRESA,ENTIDADE,TIPO) INTO V_DEVOLUCOES FROM DUAL;  
   SALDO := (V_ADIANTAMENTOS + V_DEVOLUCOES) - (V_BAIXAS_ADTOS);
   RETURN SALDO;
END; 
END RETORNA_SALDO_ADIANTAMENTOS;
/

DROP FUNCTION RAFITEC.RETORNA_SALDO_ADTOS_DATA;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_SALDO_ADTOS_DATA (EMPRESA IN NUMBER, ENTIDADE IN NUMBER, TIPO IN VARCHAR, DATAINI DATE)
 RETURN NUMBER IS SALDO NUMBER (11,2);   
BEGIN
  DECLARE 
   V_ADIANTAMENTOS NUMBER(11,2);
   V_BAIXAS_ADTOS  NUMBER(11,2);
   V_DEVOLUCOES    NUMBER(11,2);
BEGIN
  
   SELECT RETORNA_TOTAL_ADTOS_DATA (EMPRESA,ENTIDADE,TIPO,DATAINI) INTO V_ADIANTAMENTOS FROM DUAL;
   SELECT RETORNA_BAIXAS_ADTO_DATA (EMPRESA,ENTIDADE,TIPO,DATAINI) INTO V_BAIXAS_ADTOS  FROM DUAL;
   SELECT RETORNA_SALDO_DEVOL_DATA (EMPRESA,ENTIDADE,TIPO,DATAINI) INTO V_DEVOLUCOES    FROM DUAL;  
   SALDO := (V_ADIANTAMENTOS + V_DEVOLUCOES) - (V_BAIXAS_ADTOS);
   RETURN SALDO;
END; 
END RETORNA_SALDO_ADTOS_DATA;
/

DROP FUNCTION RAFITEC.RETORNA_SALDO_ADTOS_ENTREDATA;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_SALDO_ADTOS_ENTREDATA (EMPRESA IN NUMBER, ENTIDADE IN NUMBER, TIPO IN VARCHAR, DATAINI DATE, DATAFIM DATE)
 RETURN NUMBER IS SALDO NUMBER (11,2);   
BEGIN
  DECLARE 
   V_ADIANTAMENTOS NUMBER(11,2);
   V_BAIXAS_ADTOS  NUMBER(11,2);
   V_DEVOLUCOES    NUMBER(11,2);
BEGIN
  
   SELECT RETORNA_TOTAL_ADTO_ENTREDATA  (EMPRESA,ENTIDADE,TIPO,DATAINI,DATAFIM) INTO V_ADIANTAMENTOS FROM DUAL;
   SELECT RETORNA_BAIXAS_ADTO_ENTREDATA (EMPRESA,ENTIDADE,TIPO,DATAINI,DATAFIM) INTO V_BAIXAS_ADTOS  FROM DUAL;
   SELECT RETORNA_SALDO_DEVOL_ENTREDATA (EMPRESA,ENTIDADE,TIPO,DATAINI,DATAFIM) INTO V_DEVOLUCOES    FROM DUAL;  
   SALDO := (V_ADIANTAMENTOS + V_DEVOLUCOES) - (V_BAIXAS_ADTOS);
   RETURN SALDO;
END; 
END RETORNA_SALDO_ADTOS_ENTREDATA;
/

DROP FUNCTION RAFITEC.RETORNA_SALDO_DEVOL_DATA;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_SALDO_DEVOL_DATA (EMPRESA IN NUMBER, ENTIDADE IN NUMBER, TIPO IN VARCHAR, DATAINI DATE)
 RETURN NUMBER IS SALDO NUMBER (11,2);   
BEGIN
  DECLARE 
   V_DEVOLUCAO NUMBER(11,2);   
BEGIN
  
   IF  (TIPO = 'F') THEN
     SELECT NVL(SUM(LFS.VALOR_TOTAL_NF),0) INTO V_DEVOLUCAO 
     FROM LCTO_FISCAL_SAI LFS  
     LEFT JOIN LCTO_FISCAL_SAI_REF_ENT LFSRE ON (LFS.COD_EMPRESA = LFSRE.COD_EMPRESA) AND (LFS.COD_SAIDA = LFSRE.COD_SAIDA)
     WHERE (LFS.SITUACAO = 'M') AND (LFS.COD_TIPO_MOVIMENTO = 8) AND (TRUNC(LFS.DATA_EMISSAO) < TO_DATE(DATAINI)) AND
           (LFSRE.COD_ENTRADA_REF IN (SELECT AB.COD_DOCUMENTO FROM ADIANTAMENTOS_BAIXAS AB WHERE (AB.COD_EMPRESA = EMPRESA) AND (AB.COD_ENTIDADE = ENTIDADE) AND (AB.TIPO_ENTIDADE = TIPO) AND (AB.DATA_CANCELAMENTO IS NULL)));  
   END IF; 
  
    
  IF  (TIPO = 'C') THEN
     SELECT NVL(SUM(LFE.VALOR_TOTAL_NF),0) INTO V_DEVOLUCAO
     FROM LCTO_FISCAL_ENT LFE
     LEFT JOIN LCTO_FISCAL_ENT_REF_SAI LFERS ON (LFE.COD_EMPRESA = LFERS.COD_EMPRESA) AND (LFE.COD_ENTRADA = LFERS.COD_ENTRADA)
     WHERE (LFE.ID_CANCELADA = 'N') AND (LFE.COD_TIPO_MOVIMENTO = 7) AND (TRUNC(LFE.DATA_ENTRADA) < TO_DATE(DATAINI)) AND 
           (LFERS.COD_SAIDA_REF IN (SELECT AB.COD_DOCUMENTO FROM ADIANTAMENTOS_BAIXAS AB WHERE (AB.COD_EMPRESA = EMPRESA) AND (AB.COD_ENTIDADE = ENTIDADE) AND (AB.TIPO_ENTIDADE = TIPO) AND (AB.DATA_CANCELAMENTO IS NULL)));
  END IF;
    
  SALDO := V_DEVOLUCAO; 
  RETURN SALDO;
END; 
END RETORNA_SALDO_DEVOL_DATA;
/

DROP FUNCTION RAFITEC.RETORNA_SALDO_DEVOL_ENTREDATA;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_SALDO_DEVOL_ENTREDATA (EMPRESA IN NUMBER, ENTIDADE IN NUMBER, TIPO IN VARCHAR, DATAINI DATE, DATAFIM DATE)
 RETURN NUMBER IS SALDO NUMBER (11,2);   
BEGIN
  DECLARE 
   V_DEVOLUCAO NUMBER(11,2);   
BEGIN
  
   IF  (TIPO = 'F') THEN
     SELECT NVL(SUM(LFS.VALOR_TOTAL_NF),0) INTO V_DEVOLUCAO 
     FROM LCTO_FISCAL_SAI LFS  
     LEFT JOIN LCTO_FISCAL_SAI_REF_ENT LFSRE ON (LFS.COD_EMPRESA = LFSRE.COD_EMPRESA) AND (LFS.COD_SAIDA = LFSRE.COD_SAIDA)
     WHERE (LFS.SITUACAO = 'M') AND (LFS.COD_TIPO_MOVIMENTO = 8) AND (TRUNC(LFS.DATA_EMISSAO) BETWEEN TO_DATE(DATAINI) AND TO_DATE(DATAFIM)) AND
           (LFSRE.COD_ENTRADA_REF IN (SELECT AB.COD_DOCUMENTO FROM ADIANTAMENTOS_BAIXAS AB WHERE (AB.COD_EMPRESA = EMPRESA) AND (AB.COD_ENTIDADE = ENTIDADE) AND (AB.TIPO_ENTIDADE = TIPO) AND (AB.DATA_CANCELAMENTO IS NULL)));  
   END IF; 
  
    
  IF  (TIPO = 'C') THEN
     SELECT NVL(SUM(LFE.VALOR_TOTAL_NF),0) INTO V_DEVOLUCAO
     FROM LCTO_FISCAL_ENT LFE
     LEFT JOIN LCTO_FISCAL_ENT_REF_SAI LFERS ON (LFE.COD_EMPRESA = LFERS.COD_EMPRESA) AND (LFE.COD_ENTRADA = LFERS.COD_ENTRADA)
     WHERE (LFE.ID_CANCELADA = 'N') AND (LFE.COD_TIPO_MOVIMENTO = 7) AND (TRUNC(LFE.DATA_ENTRADA) BETWEEN TO_DATE(DATAINI) AND TO_DATE(DATAFIM)) AND 
           (LFERS.COD_SAIDA_REF IN (SELECT AB.COD_DOCUMENTO FROM ADIANTAMENTOS_BAIXAS AB WHERE (AB.COD_EMPRESA = EMPRESA) AND (AB.COD_ENTIDADE = ENTIDADE) AND (AB.TIPO_ENTIDADE = TIPO) AND (AB.DATA_CANCELAMENTO IS NULL)));
  END IF;
    
  SALDO := V_DEVOLUCAO; 
  RETURN SALDO;
END; 
END RETORNA_SALDO_DEVOL_ENTREDATA;
/

DROP FUNCTION RAFITEC.RETORNA_SALDO_DEVOLUCOES;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_SALDO_DEVOLUCOES (EMPRESA IN NUMBER, ENTIDADE IN NUMBER, TIPO IN VARCHAR)
 RETURN NUMBER IS SALDO NUMBER (11,2);   
BEGIN
  DECLARE 
   V_DEVOLUCAO NUMBER(11,2);   
BEGIN
  
   IF  (TIPO = 'F') THEN
     SELECT NVL(SUM(LFS.VALOR_TOTAL_NF),0) INTO V_DEVOLUCAO 
     FROM LCTO_FISCAL_SAI LFS  
     LEFT JOIN LCTO_FISCAL_SAI_REF_ENT LFSRE ON (LFS.COD_EMPRESA = LFSRE.COD_EMPRESA) AND (LFS.COD_SAIDA = LFSRE.COD_SAIDA)
     WHERE (LFS.SITUACAO = 'M') AND (LFS.COD_TIPO_MOVIMENTO = 8) AND 
           (LFSRE.COD_ENTRADA_REF IN (SELECT AB.COD_DOCUMENTO FROM ADIANTAMENTOS_BAIXAS AB WHERE (AB.COD_EMPRESA = EMPRESA) AND (AB.COD_ENTIDADE = ENTIDADE) AND (AB.TIPO_ENTIDADE = TIPO) AND (AB.DATA_CANCELAMENTO IS NULL)));  
   END IF; 
  
    
  IF  (TIPO = 'C') THEN
     SELECT NVL(SUM(LFE.VALOR_TOTAL_NF),0) INTO V_DEVOLUCAO
     FROM LCTO_FISCAL_ENT LFE
     LEFT JOIN LCTO_FISCAL_ENT_REF_SAI LFERS ON (LFE.COD_EMPRESA = LFERS.COD_EMPRESA) AND (LFE.COD_ENTRADA = LFERS.COD_ENTRADA)
     WHERE (LFE.ID_CANCELADA = 'N') AND (LFE.COD_TIPO_MOVIMENTO = 7) AND 
           (LFERS.COD_SAIDA_REF IN (SELECT AB.COD_DOCUMENTO FROM ADIANTAMENTOS_BAIXAS AB WHERE (AB.COD_EMPRESA = EMPRESA) AND (AB.COD_ENTIDADE = ENTIDADE) AND (AB.TIPO_ENTIDADE = TIPO) AND (AB.DATA_CANCELAMENTO IS NULL)));
  END IF;
    
  SALDO := V_DEVOLUCAO; 
  RETURN SALDO;
END; 
END RETORNA_SALDO_DEVOLUCOES;
/

DROP FUNCTION RAFITEC.RETORNA_SALDO_ESTOQUE_ACABADO;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_SALDO_ESTOQUE_ACABADO (EMPRESA IN NUMBER, PRODUTO IN NUMBER)
 RETURN NUMBER IS SALDO NUMBER (11,2);   
BEGIN
  DECLARE 
   ENTRADAS NUMBER(11,2);
   SAIDAS   NUMBER(11,2);
BEGIN
  
   SELECT NVL(SUM(PR.QUANTIDADE),0) INTO ENTRADAS  FROM PRODUTOS_MOVIMENTO_ACABADO PR  WHERE (PR.COD_EMPRESA = EMPRESA)  AND (PR.COD_PRODUTO = PRODUTO)  AND (PR.TIPO_MOVIMENTO = 'E') AND (PR.SITUACAO = 'A');
   SELECT NVL(SUM(PR.QUANTIDADE),0) INTO SAIDAS  FROM PRODUTOS_MOVIMENTO_ACABADO PR  WHERE  (PR.COD_EMPRESA = EMPRESA)  AND (PR.COD_PRODUTO = PRODUTO)  AND (PR.TIPO_MOVIMENTO = 'S') AND (PR.SITUACAO = 'A');
   SALDO := (ENTRADAS - SAIDAS);

   RETURN SALDO;
END; 
END RETORNA_SALDO_ESTOQUE_ACABADO;
/

DROP FUNCTION RAFITEC.RETORNA_SALDO_ESTOQUE_ITEM;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_SALDO_ESTOQUE_ITEM (EMPRESA IN NUMBER, PRODUTO IN NUMBER)
 RETURN NUMBER IS SALDO NUMBER (11,3);   
BEGIN
  DECLARE 
   ENTRADAS NUMBER(11,3);
   SAIDAS   NUMBER(11,3);
BEGIN
  
   SELECT NVL(SUM(PR.QUANTIDADE),0) INTO ENTRADAS  FROM PRODUTOS_MOVIMENTO PR  WHERE (PR.COD_EMPRESA = EMPRESA)  AND (PR.COD_PRODUTO = PRODUTO)  AND (PR.TIPO_MOVIMENTO = 'E') AND (PR.SITUACAO = 'A');
   SELECT NVL(SUM(PR.QUANTIDADE),0) INTO SAIDAS  FROM PRODUTOS_MOVIMENTO PR  WHERE  (PR.COD_EMPRESA = EMPRESA)  AND (PR.COD_PRODUTO = PRODUTO)  AND (PR.TIPO_MOVIMENTO = 'S') AND (PR.SITUACAO = 'A');
   SALDO := (ENTRADAS - SAIDAS);

   RETURN SALDO;
END; 
END RETORNA_SALDO_ESTOQUE_ITEM;
/

DROP FUNCTION RAFITEC.RETORNA_SALDO_RESIDUO_TIPOMP;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_SALDO_RESIDUO_TIPOMP (EMPRESA IN NUMBER, TIPO IN VARCHAR)
 RETURN NUMBER IS SALDO NUMBER (11,4);   
BEGIN
  DECLARE 
  ENTRADAS NUMBER(11,4);
  SAIDAS   NUMBER(11,4);
BEGIN
  
   SELECT NVL(SUM(PMR.QUANTIDADE),0) INTO ENTRADAS  FROM PRODUTOS_MOVIMENTO_RESIDUOS PMR  WHERE (PMR.COD_EMPRESA = EMPRESA)  AND (PMR.TIPO_MATERIA_PRIMA = UPPER(TIPO))  AND (PMR.TIPO_MOVIMENTO = 'E') AND (PMR.SITUACAO = 'A');
   SELECT NVL(SUM(PMR.QUANTIDADE),0) INTO SAIDAS    FROM PRODUTOS_MOVIMENTO_RESIDUOS PMR  WHERE (PMR.COD_EMPRESA = EMPRESA)  AND (PMR.TIPO_MATERIA_PRIMA = UPPER(TIPO))  AND (PMR.TIPO_MOVIMENTO = 'S') AND (PMR.SITUACAO = 'A');
   SALDO := (ENTRADAS - SAIDAS);

   RETURN SALDO;
END; 
END RETORNA_SALDO_RESIDUO_TIPOMP;
/

DROP FUNCTION RAFITEC.RETORNA_STATUS_TITULOS_PAGAR;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_STATUS_TITULOS_PAGAR (EMPRESA IN NUMBER, TITULO IN NUMBER)
   RETURN VARCHAR IS STATUS VARCHAR(1);
BEGIN
  DECLARE
    VALOR_EM_ABERTO NUMBER (11,2);
BEGIN

  SELECT (VALOR_TITULO - (VALOR_BAIXA + VALOR_DESCONTO)) INTO VALOR_EM_ABERTO FROM V_TITULOS_PAGAR WHERE (COD_EMPRESA = EMPRESA) AND (COD_TITULO = TITULO) AND (DATA_CANCELADO IS NULL);
      
  CASE --CASO O VALOR EM ABERTO SEJA MAIOR QUE 0 ENTÃO SIGNIFICA QUE O TITULO AINDA ESTA EM ABERTO SENÃO ELE SE ENCONTRA PAGO
     WHEN (VALOR_EM_ABERTO > 0)  THEN STATUS := 'A'; -- 'A' = TITULO EM ABERTO      
     WHEN (VALOR_EM_ABERTO <= 0) THEN STATUS := 'F'; -- 'F' = TITULO PAGO  
  END CASE; 
      
  RETURN STATUS;  
END;     
END RETORNA_STATUS_TITULOS_PAGAR;
/

DROP FUNCTION RAFITEC.RETORNA_STATUS_TITULOS_RECEBER;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_STATUS_TITULOS_RECEBER (EMPRESA IN NUMBER, TITULO IN NUMBER)
   RETURN VARCHAR IS STATUS VARCHAR(1);
BEGIN
  DECLARE
    VALOR_EM_ABERTO NUMBER (11,2);
BEGIN

  SELECT NVL(VALOR_ABERTO,0) INTO VALOR_EM_ABERTO FROM V_TITULOS_RECEBER WHERE (COD_EMPRESA = EMPRESA) AND (COD_TITULO = TITULO) AND (DATA_CANCELADO IS NULL);
      
  CASE --CASO O VALOR EM ABERTO SEJA MAIOR QUE 0 ENTÃO SIGNIFICA QUE O TITULO AINDA ESTA EM ABERTO SENÃO ELE SE ENCONTRA PAGO
     WHEN (VALOR_EM_ABERTO > 0)  THEN STATUS := 'A'; -- 'A' = TITULO EM ABERTO      
     WHEN (VALOR_EM_ABERTO <= 0) THEN STATUS := 'F'; -- 'F' = TITULO PAGO  
  END CASE; 
      
  RETURN STATUS;  
END;     
END RETORNA_STATUS_TITULOS_RECEBER;
/

DROP FUNCTION RAFITEC.RETORNA_TECIDO_ORIGEM;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_TECIDO_ORIGEM (PRODUTO IN NUMBER, UND_NEG NUMBER)
   RETURN NUMBER IS REVISAO NUMBER(11,2);
BEGIN
  DECLARE
    TECIDO      NUMBER (11,2);
BEGIN
  IF UND_NEG = 2 THEN
      SELECT FPB.COD_TECIDO INTO TECIDO FROM FICHA_PRODUTO_BIG_BAG FPB WHERE FPB.COD_PRODUTO = PRODUTO AND FPB.REVISAO=BUSCA_MAX_REVISAO_PROD(PRODUTO,UND_NEG);
  ELSIF UND_NEG = 0 THEN
      SELECT NVL(PIT.TECIDO_P_LAMINAR,PIT.COD_PRODUTO) INTO TECIDO FROM PRODUTOS_INTERMEDIARIOS_TEC PIT WHERE PIT.COD_PRODUTO = PRODUTO AND PIT.REVISAO_TEC=BUSCA_MAX_REVISAO_PROD(PRODUTO,UND_NEG);
  ELSE
      SELECT FPS.COD_TECIDO INTO TECIDO FROM FICHA_PRODUTO_SACARIA FPS WHERE FPS.COD_PRODUTO = PRODUTO AND FPS.REVISAO=BUSCA_MAX_REVISAO_PROD(PRODUTO,UND_NEG); 
  END IF;      
  
  RETURN TECIDO;  
END; 
END RETORNA_TECIDO_ORIGEM;
/

DROP FUNCTION RAFITEC.RETORNA_TOTAL_ADIANTAMENTOS;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_TOTAL_ADIANTAMENTOS (EMPRESA IN NUMBER, ENTIDADE IN NUMBER, TIPO IN VARCHAR)
 RETURN NUMBER IS TOTAL NUMBER (11,2);   
BEGIN
  DECLARE 
   V_ADIANTAMENTOS NUMBER(11,2);   
BEGIN
  
   SELECT (NVL(SUM(A.VALOR),0)) INTO V_ADIANTAMENTOS FROM ADIANTAMENTOS A WHERE (A.COD_EMPRESA = EMPRESA) AND (A.COD_ENTIDADE = ENTIDADE) AND (A.TIPO_ENTIDADE = TIPO) AND (A.DATA_CANCELAMENTO IS NULL);
   TOTAL := (V_ADIANTAMENTOS);
   RETURN TOTAL;
END; 
END RETORNA_TOTAL_ADIANTAMENTOS;
/

DROP FUNCTION RAFITEC.RETORNA_TOTAL_ADTO_ENTREDATA;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_TOTAL_ADTO_ENTREDATA (EMPRESA IN NUMBER, ENTIDADE IN NUMBER, TIPO IN VARCHAR, DATAINI IN DATE, DATAFIM IN DATE)
 RETURN NUMBER IS TOTAL NUMBER (11,2);   
BEGIN
  DECLARE 
   V_ADIANTAMENTOS NUMBER(11,2);   
BEGIN
  
   SELECT (NVL(SUM(A.VALOR),0)) INTO V_ADIANTAMENTOS FROM ADIANTAMENTOS A WHERE (A.COD_EMPRESA = EMPRESA) AND (A.COD_ENTIDADE = ENTIDADE) AND (A.TIPO_ENTIDADE = TIPO) AND (TRUNC(A.DATA_ADIANTAMENTO) BETWEEN TO_DATE(DATAINI) AND TO_DATE(DATAFIM)) AND (A.DATA_CANCELAMENTO IS NULL);
   TOTAL := (V_ADIANTAMENTOS);
   RETURN TOTAL;
END; 
END RETORNA_TOTAL_ADTO_ENTREDATA;
/

DROP FUNCTION RAFITEC.RETORNA_TOTAL_ADTOS_DATA;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_TOTAL_ADTOS_DATA (EMPRESA IN NUMBER, ENTIDADE IN NUMBER, TIPO IN VARCHAR, DATAINI IN DATE)
 RETURN NUMBER IS TOTAL NUMBER (11,2);   
BEGIN
  DECLARE 
   V_ADIANTAMENTOS NUMBER(11,2);   
BEGIN
  
   SELECT (NVL(SUM(A.VALOR),0)) INTO V_ADIANTAMENTOS FROM ADIANTAMENTOS A WHERE (A.COD_EMPRESA = EMPRESA) AND (A.COD_ENTIDADE = ENTIDADE) AND (A.TIPO_ENTIDADE = TIPO) AND (TRUNC(A.DATA_ADIANTAMENTO) < TO_DATE(DATAINI)) AND (A.DATA_CANCELAMENTO IS NULL);
   TOTAL := (V_ADIANTAMENTOS);
   RETURN TOTAL;
END; 
END RETORNA_TOTAL_ADTOS_DATA;
/

DROP FUNCTION RAFITEC.RETORNA_TOTAL_BAIXA_ADTOS;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_TOTAL_BAIXA_ADTOS (EMPRESA IN NUMBER, ENTIDADE IN NUMBER, TIPO IN VARCHAR)
 RETURN NUMBER IS TOTAL NUMBER (11,2);   
BEGIN
  DECLARE 
   V_BAIXAS_ADTOS NUMBER(11,2);   
BEGIN
 
   SELECT NVL(SUM(AB.VALOR),0) INTO V_BAIXAS_ADTOS  FROM ADIANTAMENTOS_BAIXAS AB WHERE (AB.COD_EMPRESA = EMPRESA) AND (AB.COD_ENTIDADE = ENTIDADE) AND (AB.TIPO_ENTIDADE = TIPO) AND (AB.DATA_CANCELAMENTO IS NULL);
   TOTAL := (V_BAIXAS_ADTOS);
   RETURN TOTAL;
END; 
END RETORNA_TOTAL_BAIXA_ADTOS;
/

DROP FUNCTION RAFITEC.RETORNA_ULTIMA_DATA_ENTRADA;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_ULTIMA_DATA_ENTRADA (
   EMPRESA   IN NUMBER,
   PRODUTO   IN NUMBER)
   RETURN TIMESTAMP
IS
   ULTIMA_DATA_ENTRADA   TIMESTAMP (6);
BEGIN
   SELECT MAX (TRUNC (PV.DATA_MOVIMENTO))
     INTO ULTIMA_DATA_ENTRADA
     FROM PRODUTOS_MOVIMENTO PV
    WHERE     (PV.COD_EMPRESA = EMPRESA)
          AND (PV.COD_PRODUTO = PRODUTO)
          AND (PV.TIPO_MOVIMENTO = 'E')
          AND (PV.SITUACAO = 'A');   
          
     RETURN ULTIMA_DATA_ENTRADA;

END RETORNA_ULTIMA_DATA_ENTRADA;
/

DROP FUNCTION RAFITEC.RETORNA_ULTIMA_DATA_PREV_OSLUB;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_ULTIMA_DATA_PREV_OSLUB (PLANO IN NUMBER, MODELO IN NUMBER, COMPONENTE IN NUMBER, SUBCOMPONENTE IN NUMBER)
   RETURN TIMESTAMP
IS
   ULTIMA_DATA_PREVISTA   TIMESTAMP (6);
BEGIN
   SELECT MAX(OL.DATA_PREVISTA) INTO ULTIMA_DATA_PREVISTA FROM OS_LUBRIFICACAO OL
   WHERE(OL.COD_PLANO_LUBRIFICACAO = PLANO) AND (OL.COD_MODELO = MODELO) AND (OL.COD_COMPONENTE = COMPONENTE) AND (OL.COD_SUB_COMPONENTE = SUBCOMPONENTE);   
          
     RETURN ULTIMA_DATA_PREVISTA;

END RETORNA_ULTIMA_DATA_PREV_OSLUB;
/

DROP FUNCTION RAFITEC.RETORNA_ULTIMA_DATA_SAIDA;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_ULTIMA_DATA_SAIDA (
   EMPRESA   IN NUMBER,
   PRODUTO   IN NUMBER)
   RETURN TIMESTAMP
IS
   ULTIMA_DATA_SAIDA   TIMESTAMP (6);
BEGIN
   SELECT MAX (TRUNC (PV.DATA_MOVIMENTO))
     INTO ULTIMA_DATA_SAIDA
     FROM PRODUTOS_MOVIMENTO PV
    WHERE     (PV.COD_EMPRESA = EMPRESA)
          AND (PV.COD_PRODUTO = PRODUTO)
          AND (PV.TIPO_MOVIMENTO = 'S')
          AND (PV.SITUACAO = 'A');   
          
     RETURN ULTIMA_DATA_SAIDA;

END RETORNA_ULTIMA_DATA_SAIDA;
/

DROP FUNCTION RAFITEC.RETORNA_ULTIMO_TIPO_MOV;

CREATE OR REPLACE FUNCTION RAFITEC.RETORNA_ULTIMO_TIPO_MOV (EMPRESA   IN NUMBER, PRODUTO   IN NUMBER)
   RETURN VARCHAR IS ULTIMO_MOVIMENTO VARCHAR(1);
BEGIN
  DECLARE
    QTDE_TIPO_MOV      NUMBER (2);
BEGIN

  SELECT COUNT(PR.TIPO_MOVIMENTO) INTO QTDE_TIPO_MOV FROM PRODUTOS_MOVIMENTO PR WHERE (PR.COD_EMPRESA = EMPRESA) AND (PR.COD_PRODUTO = PRODUTO) AND (PR.SITUACAO = 'A') AND (PR.DATA_MOVIMENTO = (SELECT MAX (PM.DATA_MOVIMENTO) FROM PRODUTOS_MOVIMENTO PM WHERE (PM.COD_EMPRESA = EMPRESA) AND (PM.COD_PRODUTO = PRODUTO) AND (PM.SITUACAO = 'A')));
  
  IF  (QTDE_TIPO_MOV = 1) THEN
     SELECT PR.TIPO_MOVIMENTO INTO ULTIMO_MOVIMENTO FROM PRODUTOS_MOVIMENTO PR WHERE (PR.COD_EMPRESA =EMPRESA) AND (PR.COD_PRODUTO =PRODUTO) AND (PR.SITUACAO = 'A') AND (PR.DATA_MOVIMENTO = (SELECT MAX (PM.DATA_MOVIMENTO) FROM PRODUTOS_MOVIMENTO PM WHERE (PM.COD_EMPRESA =EMPRESA) AND (PM.COD_PRODUTO =PRODUTO) AND (PM.SITUACAO = 'A')));
  ELSE   
     ULTIMO_MOVIMENTO := 'S';
  END IF; 
  
  RETURN ULTIMO_MOVIMENTO;  
END;     
END RETORNA_ULTIMO_TIPO_MOV;
/

DROP FUNCTION RAFITEC.RPM_MEDIA_SEMANA;

CREATE OR REPLACE FUNCTION RAFITEC.RPM_MEDIA_SEMANA(PROD IN NUMBER, SEM IN NUMBER)
   RETURN NUMBER IS RESULT NUMBER(15,2);
BEGIN
DECLARE
RESULT NUMBER(15,2); 

BEGIN 
 SELECT AVG(APT.RPM) INTO RESULT FROM V_APONTAMENTO_PRODUCAO_TEC APT WHERE APT.COD_MAQUINA IN ((SELECT MP.COD_MAQUINA FROM MAQUINAS_PRODUTO MP  WHERE (MP.COD_PRODUTO= PROD))) AND TO_CHAR(APT.DATA,'iW') = (SEM-1);
  
 RETURN RESULT;

END;
END RPM_MEDIA_SEMANA;
/

DROP FUNCTION RAFITEC.SUM_METROS_CARTEIRA_MES_REF;

CREATE OR REPLACE FUNCTION RAFITEC.SUM_METROS_CARTEIRA_MES_REF(TEC IN NUMBER,SEM IN NUMBER,SEM_INI IN NUMBER,MES IN NUMBER,ANO IN NUMBER)
   RETURN NUMBER IS RESULT NUMBER(15,3);
BEGIN
DECLARE
RESULT NUMBER(15,3);
MM NUMBER(15,3);
MS NUMBER(15,3); 

BEGIN
    IF (MES = 12) THEN 
        SELECT NVL(SUM(CP.METROS_FALTANTE),0) INTO MM FROM CARTEIRA_PEDIDOS CP WHERE CP.TECIDO_TECELAGEM=TEC AND (TO_CHAR(CP.DATA_ENTREGA,'ww') > SEM) AND TO_CHAR(CP.DATA_ENTREGA,'mm')=MES AND TO_CHAR(CP.DATA_ENTREGA,'YYYY')=ANO AND CP.STATUS IN ('A','N','P','R') ;
    ELSE
        SELECT NVL(SUM(CP.METROS_FALTANTE),0) INTO MM FROM CARTEIRA_PEDIDOS CP WHERE CP.TECIDO_TECELAGEM=TEC AND (TO_CHAR(CP.DATA_ENTREGA,'iw') > SEM) AND TO_CHAR(CP.DATA_ENTREGA,'mm')=MES AND TO_CHAR(CP.DATA_ENTREGA,'YYYY')=ANO AND CP.STATUS IN ('A','N','P','R') ;
    END IF;
  
 RESULT := MM;
  
 RETURN RESULT;

END;
END SUM_METROS_CARTEIRA_MES_REF;
/

DROP FUNCTION RAFITEC.SUM_METROS_CARTEIRA_MES_SEG;

CREATE OR REPLACE FUNCTION RAFITEC.SUM_METROS_CARTEIRA_MES_SEG(TEC IN NUMBER,MES IN NUMBER,ANO IN NUMBER)
   RETURN NUMBER IS RESULT NUMBER(15,3);
BEGIN
DECLARE
RESULT NUMBER(15,3); 

BEGIN
 IF MES = 12 THEN
    SELECT NVL(SUM(CP.METROS_FALTANTE),0) INTO RESULT FROM CARTEIRA_PEDIDOS CP WHERE CP.TECIDO_TECELAGEM=TEC AND TO_CHAR(CP.DATA_ENTREGA,'mm')=1 AND TO_CHAR(CP.DATA_ENTREGA,'YYYY')=(ANO+1) AND CP.STATUS IN ('A','N','P','R');
 ELSE 
    SELECT NVL(SUM(CP.METROS_FALTANTE),0) INTO RESULT FROM CARTEIRA_PEDIDOS CP WHERE CP.TECIDO_TECELAGEM=TEC AND TO_CHAR(CP.DATA_ENTREGA,'mm')=(MES + 1) AND TO_CHAR(CP.DATA_ENTREGA,'YYYY')=ANO AND CP.STATUS IN ('A','N','P','R');
 END IF;
  
 RETURN RESULT;

END;
END SUM_METROS_CARTEIRA_MES_SEG;
/

DROP FUNCTION RAFITEC.SUM_METROS_CARTEIRA_SEMANA;

CREATE OR REPLACE FUNCTION RAFITEC.SUM_METROS_CARTEIRA_SEMANA(TEC IN NUMBER,SEM IN NUMBER,MES IN NUMBER,ANO IN NUMBER)
   RETURN NUMBER IS RESULT NUMBER(15,3);
BEGIN
DECLARE
RESULT NUMBER(15,3); 

BEGIN 

 SELECT NVL(SUM(CP.METROS_FALTANTE),0) INTO RESULT 
 FROM CARTEIRA_PEDIDOS CP 
 WHERE CP.TECIDO_TECELAGEM=TEC 
 AND TO_CHAR(CP.DATA_ENTREGA,'iw')=SEM 
 AND TO_CHAR(CP.DATA_ENTREGA,'mm')=MES 
 AND (TO_CHAR(CP.DATA_ENTREGA,'YYYY')=ANO) 
 AND CP.STATUS IN ('A','N','P','R'); 

RETURN RESULT;

END;
END SUM_METROS_CARTEIRA_SEMANA;
/

DROP FUNCTION RAFITEC.SUM_METROS_CARTEIRA_SEM_ATR;

CREATE OR REPLACE FUNCTION RAFITEC.SUM_METROS_CARTEIRA_SEM_ATR(TEC IN NUMBER,SEM_INI IN NUMBER,SEM IN NUMBER,ANO IN NUMBER,ANO_INI IN NUMBER)
   RETURN NUMBER IS RESULT NUMBER(15,3);
BEGIN
DECLARE
RESULT NUMBER(15,3); 

BEGIN
 IF ANO_INI <> ANO THEN
     SELECT NVL(SUM(CP.METROS_FALTANTE),0) INTO RESULT 
     FROM CARTEIRA_PEDIDOS CP 
     WHERE CP.TECIDO_TECELAGEM=TEC 
     AND (((TO_CHAR(CP.DATA_ENTREGA,'ww') BETWEEN SEM_INI AND (SEM_INI + 5))
     AND (TO_CHAR(CP.DATA_ENTREGA,'YYYY') = ANO_INI)) OR ((TO_CHAR(CP.DATA_ENTREGA,'iw') BETWEEN 0 AND SEM)
     AND (TO_CHAR(CP.DATA_ENTREGA,'YYYY') = ANO))) 
     AND CP.STATUS IN ('A','N','P','R');
 ELSE  
     SELECT NVL(SUM(CP.METROS_FALTANTE),0) INTO RESULT 
     FROM CARTEIRA_PEDIDOS CP 
     WHERE CP.TECIDO_TECELAGEM=TEC 
     AND (TO_CHAR(CP.DATA_ENTREGA,'iw') BETWEEN SEM_INI AND SEM) 
     AND CP.STATUS IN ('A','N','P','R')
     AND (TO_CHAR(CP.DATA_ENTREGA,'YYYY') = ANO);
 END IF; 

RETURN RESULT;

END;
END SUM_METROS_CARTEIRA_SEM_ATR;
/

DROP FUNCTION RAFITEC.SUM_METROS_EST_ALO;

CREATE OR REPLACE FUNCTION RAFITEC.SUM_METROS_EST_ALO(TEC IN NUMBER)
   RETURN NUMBER IS RESULT NUMBER(15,3);
BEGIN
DECLARE
RESULT NUMBER(15,3); 

BEGIN 
 SELECT SUM(PE.METROS) INTO RESULT FROM PRODUTOS_ETIQUETAS PE WHERE PE.COD_PRODUTO =TEC AND PE.STATUS = 'A' AND PE.COD_DESTINO IS NOT NULL ;
  
 RETURN RESULT;

END;
END SUM_METROS_EST_ALO;
/

DROP FUNCTION RAFITEC.SUM_METROS_EST_LAM_ALO;

CREATE OR REPLACE FUNCTION RAFITEC.SUM_METROS_EST_LAM_ALO(TEC IN NUMBER)
   RETURN NUMBER IS RESULT NUMBER(15,3);
BEGIN
DECLARE
RESULT NUMBER(15,3); 

BEGIN 
 SELECT SUM(PE.METROS) INTO RESULT FROM PRODUTOS_ETIQUETAS PE 
 WHERE PE.COD_PRODUTO IN (SELECT CP.COD_TECIDO FROM CARTEIRA_PEDIDOS CP 
                          INNER JOIN V_PRODUTOS_INTERMEDIARIO_TEC PIT ON PIT.COD_PRODUTO=CP.COD_TECIDO AND PIT.TIPO_TECIDO=3
                          WHERE CP.TECIDO_TECELAGEM=TEC GROUP BY CP.COD_TECIDO) 
 AND PE.STATUS = 'A' 
 AND PE.COD_DESTINO IS NOT NULL;
  
 RETURN RESULT;

END;
END SUM_METROS_EST_LAM_ALO;
/

DROP FUNCTION RAFITEC.SUM_METROS_ESTOQUE;

CREATE OR REPLACE FUNCTION RAFITEC.SUM_METROS_ESTOQUE(TEC IN NUMBER)
   RETURN NUMBER IS RESULT NUMBER(15,3);
BEGIN
DECLARE
RESULT NUMBER(15,3); 

BEGIN 
 SELECT SUM(PE.METROS) INTO RESULT FROM PRODUTOS_ETIQUETAS PE WHERE PE.COD_PRODUTO =TEC AND PE.STATUS = 'A' AND PE.COD_DESTINO IS NULL ;
  
 RETURN RESULT;

END;
END SUM_METROS_ESTOQUE;
/

DROP FUNCTION RAFITEC.SUM_METROS_ESTOQUE_LAM;

CREATE OR REPLACE FUNCTION RAFITEC.SUM_METROS_ESTOQUE_LAM(TEC IN NUMBER)
   RETURN NUMBER IS RESULT NUMBER(15,3);
BEGIN
DECLARE
RESULT NUMBER(15,3); 

BEGIN 
 SELECT SUM(PE.METROS) INTO RESULT FROM PRODUTOS_ETIQUETAS PE 
 WHERE PE.COD_PRODUTO IN (SELECT CP.COD_TECIDO FROM CARTEIRA_PEDIDOS CP 
                          INNER JOIN V_PRODUTOS_INTERMEDIARIO_TEC PIT ON PIT.COD_PRODUTO=CP.COD_TECIDO AND PIT.TIPO_TECIDO=3
                          WHERE CP.TECIDO_TECELAGEM=TEC GROUP BY CP.COD_TECIDO) 
 AND PE.STATUS = 'A' 
 AND PE.COD_DESTINO IS NULL;
  
 RETURN RESULT;

END;
END SUM_METROS_ESTOQUE_LAM;
/

DROP FUNCTION RAFITEC.SUM_METROS_PROD_IMP_SEM;

CREATE OR REPLACE FUNCTION RAFITEC.SUM_METROS_PROD_IMP_SEM(TEC IN NUMBER,SEM IN NUMBER,MES IN NUMBER)
   RETURN NUMBER IS RESULT NUMBER(15,3);
BEGIN
DECLARE
RESULT   NUMBER(15,3);
IMPRESSO NUMBER(15,3);
LISO     NUMBER(15,3); 

BEGIN
 IMPRESSO := 0;
 LISO     := 0; 
 SELECT NVL(SUM(PE.METROS),0) INTO IMPRESSO FROM PRODUTOS_ETIQUETAS PE WHERE PE.COD_PRODUTO = (SELECT FPS.COD_PRODUTO FROM V_FICHA_PRODUTO_SACARIA FPS 
                                                                                             LEFT JOIN V_PRODUTOS_INTERM_TEC_COMPLETA PIT ON PIT.COD_PRODUTO=FPS.COD_TECIDO
                                                                                             WHERE (PIT.TECIDO_P_LAMINAR = TEC) OR (PIT.COD_PRODUTO = TEC)
                                                                                             GROUP BY FPS.COD_PRODUTO) 
                                                                      AND TO_CHAR(PE.DATA_GERACAO,'ww')=SEM AND TO_CHAR(PE.DATA_GERACAO,'mm')=MES AND PE.STATUS <> 'C' AND PE.COD_TIPO_ETIQUETA=12 ; 

 SELECT NVL(SUM((PE.QUANTIDADE * (SELECT FPSS.CORTE_COMPRIMENTO FROM V_FICHA_PRODUTO_SACARIA FPSS                         
                         WHERE FPSS.COD_PRODUTO = PE.COD_PRODUTO))),0) 
 INTO LISO FROM PRODUTOS_ETIQUETAS PE  
 WHERE PE.COD_PRODUTO = (SELECT FPS.COD_PRODUTO FROM V_FICHA_PRODUTO_SACARIA FPS 
                         LEFT JOIN V_PRODUTOS_INTERM_TEC_COMPLETA PIT ON PIT.COD_PRODUTO=FPS.COD_TECIDO
                         WHERE (PIT.TECIDO_P_LAMINAR = TEC) OR (PIT.COD_PRODUTO = TEC)
                         GROUP BY FPS.COD_PRODUTO) 
 AND TO_CHAR(PE.DATA_GERACAO,'ww')=SEM AND TO_CHAR(PE.DATA_GERACAO,'mm')=MES AND PE.STATUS <> 'C' AND PE.COD_TIPO_ETIQUETA=1 ;
 
 RESULT := IMPRESSO + LISO;
 
RETURN RESULT;

END;
END SUM_METROS_PROD_IMP_SEM;
/

DROP FUNCTION RAFITEC.TRANSFORMA_MIN_DATA_EXTENSO;

CREATE OR REPLACE FUNCTION RAFITEC.TRANSFORMA_MIN_DATA_EXTENSO (MINUTOS IN NUMBER)
   RETURN VARCHAR IS DATA_EXTENSO VARCHAR(50);
BEGIN
  SELECT    
   (TO_CHAR (TRUNC (MINUTOS / 1440), '099')   || ' Dia(s)' ||                        --Transforma a quantidade de minutos em dias 1 dia = 1440 minutos 
   TO_CHAR (TRUNC (MOD (MINUTOS,1440)/60), '09')   || ' Hrs' ||                     --Divido o resto da divisão acima para encontrar o numero de horas
   TO_CHAR (TRUNC (MOD(MOD(MINUTOS,1440),60)), '09')   || ' Min') INTO DATA_EXTENSO --O resto que sobrar da divisão acima são a quantidade de minutos
  FROM DUAL;  
  RETURN DATA_EXTENSO;   
END TRANSFORMA_MIN_DATA_EXTENSO;
/
